# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-05-07 19:05
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0006_auto_20160507_1803'),
    ]

    operations = [
        migrations.AlterField(
            model_name='archivedatarepository',
            name='tape_contents',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Tape contents, including untracked files.', null=True),
        ),
        migrations.AlterField(
            model_name='filerecord',
            name='tape_sequential_number',
            field=models.IntegerField(blank=True, help_text='sequential ID in tape archive, if applicable. Can contain multiple records.', null=True),
        ),
        migrations.AlterField(
            model_name='localdatarepository',
            name='hostname',
            field=models.CharField(blank=True, help_text="Hostname must be unique. e.g. 'NSLaptop'", max_length=1000, null=True),
        ),
        migrations.AlterField(
            model_name='localdatarepository',
            name='path',
            field=models.CharField(blank=True, help_text="e.g. 'D:/Data/acquisition/'", max_length=1000, null=True),
        ),
        migrations.AlterField(
            model_name='logicalfile',
            name='fileset',
            field=models.ForeignKey(help_text='The Fileset that this file belongs to.', on_delete=django.db.models.deletion.CASCADE, to='data.Fileset'),
        ),
        migrations.AlterField(
            model_name='logicalfile',
            name='is_folder',
            field=models.BooleanField(help_text='True if the LogicalFile is a folder, not a single file.'),
        ),
        migrations.AlterField(
            model_name='logicalfile',
            name='md5',
            field=models.CharField(blank=True, help_text='MD5 hash, if a file', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='networkdatarepository',
            name='afp_supported',
            field=models.BooleanField(help_text='AFP supported (Linux)'),
        ),
        migrations.AlterField(
            model_name='networkdatarepository',
            name='fqdn',
            field=models.CharField(blank=True, help_text='Fully Qualified Domain Name or IP, e.g. 1.2.3.4 or foxtrot.neuro.ucl.ac.uk', max_length=1000, null=True),
        ),
        migrations.AlterField(
            model_name='networkdatarepository',
            name='nfs_supported',
            field=models.BooleanField(help_text='NFS supported (Linux)'),
        ),
        migrations.AlterField(
            model_name='networkdatarepository',
            name='path',
            field=models.CharField(blank=True, help_text="Path name after share, e.g. '/subjects/'", max_length=1000, null=True),
        ),
        migrations.AlterField(
            model_name='networkdatarepository',
            name='share',
            field=models.CharField(blank=True, help_text="Share name, e.g. 'Data'", max_length=1000, null=True),
        ),
        migrations.AlterField(
            model_name='networkdatarepository',
            name='smb_supported',
            field=models.BooleanField(help_text='SMB supported (Windows)'),
        ),
    ]
