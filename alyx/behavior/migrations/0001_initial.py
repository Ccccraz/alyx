# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-06-19 08:09
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('actions', '0001_initial'),
        ('data', '0001_initial'),
        ('misc', '0001_initial'),
        ('equipment', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EventSeries',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, help_text='The creation date.', null=True)),
                ('description', models.TextField(blank=True, help_text="misc. narrative e.g. 'drifting gratings of different orientations', 'ChoiceWorld behavior events'")),
                ('generating_software', models.CharField(blank=True, help_text="e.g. 'ChoiceWorld 0.8.3'", max_length=255)),
                ('created_by', models.ForeignKey(blank=True, help_text='The creator of the data.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='behavior_eventseries_created_by_related', to=settings.AUTH_USER_MODEL)),
                ('event_times', models.ForeignKey(blank=True, help_text='n*1 array of times in seconds (universal timescale)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_series_event_times', to='data.Dataset')),
                ('event_types_id', models.ForeignKey(blank=True, help_text='n*1 array listing the type of each event', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_series_event_descriptions', to='data.Dataset')),
                ('provenance_directory', models.ForeignKey(blank=True, help_text='link to directory containing intermediate results', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_series_provenance', to='data.Dataset')),
                ('session', models.ForeignKey(blank=True, help_text='The Session to which this data belongs', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='behavior_eventseries_session_related', to='actions.Session')),
                ('type_descriptions_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.Dataset')),
            ],
            options={
                'verbose_name_plural': 'Event series',
            },
        ),
        migrations.CreateModel(
            name='HeadTracking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, help_text='The creation date.', null=True)),
                ('description', models.TextField(blank=True, help_text="misc. narrative e.g. ('unit: cm' or 'unknown scale factor')")),
                ('generating_software', models.CharField(blank=True, help_text="e.g. 'HeadTracka 0.8.3'", max_length=255)),
                ('created_by', models.ForeignKey(blank=True, help_text='The creator of the data.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='behavior_headtracking_created_by_related', to=settings.AUTH_USER_MODEL)),
                ('movie', models.ForeignKey(blank=True, help_text='Link to raw data', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_tracking_movie', to='data.TimeSeries')),
                ('provenance_directory', models.ForeignKey(blank=True, help_text='link to directory containing intermediate results', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_tracking_provenance', to='data.Dataset')),
                ('session', models.ForeignKey(blank=True, help_text='The Session to which this data belongs', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='behavior_headtracking_session_related', to='actions.Session')),
                ('x_y_theta', models.ForeignKey(blank=True, help_text='3*n timeseries giving x and y coordinates of head plus angle', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_tracking_x_y_d', to='data.TimeSeries')),
            ],
            options={
                'verbose_name_plural': 'Head tracking',
            },
        ),
        migrations.CreateModel(
            name='IntervalSeries',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, help_text='The creation date.', null=True)),
                ('description', models.TextField(blank=True, help_text="misc. narrative e.g. 'drifting gratings of different orientations', 'ChoiceWorld behavior intervals'")),
                ('generating_software', models.CharField(blank=True, help_text="e.g. 'ChoiceWorld 0.8.3'", max_length=255)),
                ('created_by', models.ForeignKey(blank=True, help_text='The creator of the data.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='behavior_intervalseries_created_by_related', to=settings.AUTH_USER_MODEL)),
                ('interval_times', models.ForeignKey(blank=True, help_text='n*2 array, with associated array of row labels.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='interval_series_interval_times', to='data.Dataset')),
                ('interval_types', models.ForeignKey(blank=True, help_text='n*1 array listing the type of each interval', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='interval_series_interval_descriptions', to='data.Dataset')),
                ('provenance_directory', models.ForeignKey(blank=True, help_text='link to directory containing intermediate results', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='interval_series_provenance', to='data.Dataset')),
                ('session', models.ForeignKey(blank=True, help_text='The Session to which this data belongs', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='behavior_intervalseries_session_related', to='actions.Session')),
                ('type_descriptions', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.Dataset')),
            ],
            options={
                'verbose_name_plural': 'Interval series',
            },
        ),
        migrations.CreateModel(
            name='OptogeneticStimulus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, help_text='The creation date.', null=True)),
                ('light_delivery', models.CharField(blank=True, help_text="e.g. 'fiber pointed at craniotomy'", max_length=255)),
                ('description', models.CharField(blank=True, help_text="e.g. 'square pulses', 'ramps'", max_length=255)),
                ('wavelength', models.FloatField(blank=True, help_text='in nm', null=True)),
                ('power_calculation_method', models.CharField(blank=True, help_text='TODO: normalize? measured, nominal', max_length=255)),
                ('apparatus', models.ForeignKey(blank=True, help_text='e.g. Laser that was used for stimulation.', null=True, on_delete=django.db.models.deletion.CASCADE, to='equipment.Appliance')),
                ('brain_location', models.ForeignKey(blank=True, help_text='of fiber tip, craniotomy, etc.', null=True, on_delete=django.db.models.deletion.CASCADE, to='misc.BrainLocation')),
                ('created_by', models.ForeignKey(blank=True, help_text='The creator of the data.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='behavior_optogeneticstimulus_created_by_related', to=settings.AUTH_USER_MODEL)),
                ('power', models.ForeignKey(blank=True, help_text='link to an n*1 array giving each pulse power', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='optogenetic_stimulus_power', to='data.Dataset')),
                ('session', models.ForeignKey(blank=True, help_text='The Session to which this data belongs', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='behavior_optogeneticstimulus_session_related', to='actions.Session')),
                ('stimulus_positions', models.ForeignKey(blank=True, help_text='link to an n*3 array of stimulus positions', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='optogenetic_stimulus_positions', to='data.Dataset')),
                ('stimulus_times', models.ForeignKey(blank=True, help_text='link to an n*2 array of start and stop of each pulse (sec)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='optogenetic_stimulus_times', to='data.Dataset')),
                ('waveform', models.ForeignKey(blank=True, help_text='link to a file giving the waveform of each stimulus.?', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='optogenetic_stimulus_waveform', to='data.Dataset')),
            ],
            options={
                'verbose_name_plural': 'Optogenetic stimulus',
            },
        ),
        migrations.CreateModel(
            name='Pharmacology',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, help_text='The creation date.', null=True)),
                ('drug', models.CharField(blank=True, help_text='TODO: normalize? Also say what it is dissolved in (DMSO etc)', max_length=255)),
                ('administration_route', models.CharField(blank=True, help_text='TODO: normalize? IP, IV, IM, surface etc…', max_length=255)),
                ('start_time', models.FloatField(blank=True, help_text='in seconds relative to session start. TODO: not DateTimeField? / TimeDifference', null=True)),
                ('end_time', models.FloatField(blank=True, help_text='equals start time if single application. TODO: should this be an offset? Or DateTimeField? Or TimeDifference?', null=True)),
                ('concentration', models.CharField(blank=True, help_text='TODO: not FloatField? include unit (e.g. g/kg; mM; %)', max_length=255)),
                ('volume', models.CharField(blank=True, help_text='TODO: not FloatField? include unit (e.g. µL)', max_length=255)),
                ('created_by', models.ForeignKey(blank=True, help_text='The creator of the data.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='behavior_pharmacology_created_by_related', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(blank=True, help_text='The Session to which this data belongs', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='behavior_pharmacology_session_related', to='actions.Session')),
            ],
            options={
                'verbose_name_plural': 'Pharmacology',
            },
        ),
        migrations.CreateModel(
            name='PupilTracking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, help_text='The creation date.', null=True)),
                ('eye', models.CharField(blank=True, choices=[('L', 'Left'), ('R', 'Right')], help_text='Which eye was tracked; left or right', max_length=1)),
                ('description', models.TextField(blank=True, help_text="misc. narrative e.g. ('unit: mm' or 'unknown scale factor')")),
                ('generating_software', models.CharField(blank=True, help_text="e.g. 'PupilTracka 0.8.3'", max_length=255)),
                ('created_by', models.ForeignKey(blank=True, help_text='The creator of the data.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='behavior_pupiltracking_created_by_related', to=settings.AUTH_USER_MODEL)),
                ('movie', models.ForeignKey(blank=True, help_text='Link to raw data', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pupil_tracking_movie', to='data.TimeSeries')),
                ('provenance_directory', models.ForeignKey(blank=True, help_text='link to directory containing intermediate results', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pupil_tracking_provenance', to='data.Dataset')),
                ('session', models.ForeignKey(blank=True, help_text='The Session to which this data belongs', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='behavior_pupiltracking_session_related', to='actions.Session')),
                ('x_y_d', models.ForeignKey(blank=True, help_text='n*3 timeseries giving x and y coordinates of center plus diameter', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pupil_tracking_x_y_d', to='data.TimeSeries')),
            ],
            options={
                'verbose_name_plural': 'Pupil tracking',
            },
        ),
    ]
