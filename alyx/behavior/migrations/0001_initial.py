# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-04-26 11:46
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EventSeries',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('description', models.TextField(blank=True, help_text="misc. narrative e.g. 'drifting gratings of different orientations', 'ChoiceWorld behavior events'")),
                ('generating_software', models.CharField(blank=True, help_text="e.g. 'ChoiceWorld 0.8.3'", max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Event series',
            },
        ),
        migrations.CreateModel(
            name='HeadTracking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('description', models.TextField(blank=True, help_text="misc. narrative e.g. ('unit: cm' or 'unknown scale factor')")),
                ('generating_software', models.CharField(blank=True, help_text="e.g. 'HeadTracka 0.8.3'", max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Head tracking',
            },
        ),
        migrations.CreateModel(
            name='IntervalSeries',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('description', models.TextField(blank=True, help_text="misc. narrative e.g. 'drifting gratings of different orientations', 'ChoiceWorld behavior intervals'")),
                ('generating_software', models.CharField(blank=True, help_text="e.g. 'ChoiceWorld 0.8.3'", max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Interval series',
            },
        ),
        migrations.CreateModel(
            name='OptogeneticStimulus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('light_delivery', models.CharField(blank=True, help_text="e.g. 'fiber pointed at craniotomy'", max_length=255)),
                ('description', models.CharField(blank=True, help_text="e.g. 'square pulses', 'ramps'", max_length=255)),
                ('wavelength', models.FloatField(blank=True, help_text='in nm', null=True)),
                ('power_calculation_method', models.CharField(blank=True, help_text='TODO: normalize? measured, nominal', max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Optogenetic stimulus',
            },
        ),
        migrations.CreateModel(
            name='Pharmacology',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('drug', models.CharField(blank=True, help_text='TODO: normalize? Also say what it is dissolved in (DMSO etc)', max_length=255)),
                ('administration_route', models.CharField(blank=True, help_text='TODO: normalize? IP, IV, IM, surface etc…', max_length=255)),
                ('start_time', models.FloatField(blank=True, help_text='in seconds relative to session start. TODO: not DateTimeField? / TimeDifference', null=True)),
                ('end_time', models.FloatField(blank=True, help_text='equals start time if single application. TODO: should this be an offset? Or DateTimeField? Or TimeDifference?', null=True)),
                ('concentration', models.CharField(blank=True, help_text='TODO: not FloatField? include unit (e.g. g/kg; mM; %)', max_length=255)),
                ('volume', models.CharField(blank=True, help_text='TODO: not FloatField? include unit (e.g. µL)', max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Pharmacology',
            },
        ),
        migrations.CreateModel(
            name='PupilTracking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('eye', models.CharField(blank=True, choices=[('L', 'Left'), ('R', 'Right')], help_text='Which eye was tracked; left or right', max_length=1)),
                ('description', models.TextField(blank=True, help_text="misc. narrative e.g. ('unit: mm' or 'unknown scale factor')")),
                ('generating_software', models.CharField(blank=True, help_text="e.g. 'PupilTracka 0.8.3'", max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Pupil tracking',
            },
        ),
    ]
