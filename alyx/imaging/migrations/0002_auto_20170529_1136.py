# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-05-29 10:36
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('imaging', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='roi',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='The creator of the data.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='imaging_roi_created_by_related', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='roi',
            name='created_date',
            field=models.DateTimeField(blank=True, default=django.utils.timezone.now, help_text='The creation date.', null=True),
        ),
        migrations.AddField(
            model_name='roidetection',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='The creator of the data.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='imaging_roidetection_created_by_related', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='roidetection',
            name='created_date',
            field=models.DateTimeField(blank=True, default=django.utils.timezone.now, help_text='The creation date.', null=True),
        ),
        migrations.AddField(
            model_name='svdcompressedmovie',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='The creator of the data.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='imaging_svdcompressedmovie_created_by_related', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='svdcompressedmovie',
            name='created_date',
            field=models.DateTimeField(blank=True, default=django.utils.timezone.now, help_text='The creation date.', null=True),
        ),
        migrations.AddField(
            model_name='twophotonimaging',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='The creator of the data.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='imaging_twophotonimaging_created_by_related', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='twophotonimaging',
            name='created_date',
            field=models.DateTimeField(blank=True, default=django.utils.timezone.now, help_text='The creation date.', null=True),
        ),
        migrations.AddField(
            model_name='widefieldimaging',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='The creator of the data.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='imaging_widefieldimaging_created_by_related', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='widefieldimaging',
            name='created_date',
            field=models.DateTimeField(blank=True, default=django.utils.timezone.now, help_text='The creation date.', null=True),
        ),
        migrations.AddField(
            model_name='widefieldimaging',
            name='nominal_end_time',
            field=models.DateTimeField(blank=True, help_text='Equals start time if single application. TODO: should this be an offset? Or DateTimeField? Or TimeDifference?', null=True),
        ),
        migrations.AddField(
            model_name='widefieldimaging',
            name='nominal_start_time',
            field=models.DateTimeField(blank=True, help_text='in seconds relative to session start. TODO: not DateTimeField? / TimeDifference', null=True),
        ),
        migrations.AlterField(
            model_name='roi',
            name='session',
            field=models.ForeignKey(blank=True, help_text='The Session to which this data belongs', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='imaging_roi_session_related', to='actions.Session'),
        ),
        migrations.AlterField(
            model_name='roidetection',
            name='f',
            field=models.ForeignKey(blank=True, help_text='array of size nT by nROIs giving raw fluorescence', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='roi_detection_f', to='data.TimeSeries'),
        ),
        migrations.AlterField(
            model_name='roidetection',
            name='f0',
            field=models.ForeignKey(blank=True, help_text='array of size nT by nROIs giving resting fluorescence', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='roi_detection_f0', to='data.TimeSeries'),
        ),
        migrations.AlterField(
            model_name='roidetection',
            name='masks',
            field=models.ForeignKey(blank=True, help_text='array of size nROIs by nY by nX', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='roi_detection_masks', to='data.Dataset'),
        ),
        migrations.RemoveField(
            model_name='roidetection',
            name='plane',
	),
	migrations.AddField(
            model_name='roidetection',
            name='plane',
            field=models.ForeignKey(blank=True, help_text='array saying which plane each roi is found in. TODO: is this an ArrayField? JSON?', null=True, on_delete=django.db.models.deletion.CASCADE, to='data.Dataset'),
        ),
        migrations.AlterField(
            model_name='roidetection',
            name='session',
            field=models.ForeignKey(blank=True, help_text='The Session to which this data belongs', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='imaging_roidetection_session_related', to='actions.Session'),
        ),
        migrations.AlterField(
            model_name='svdcompressedmovie',
            name='compressed_data_U',
            field=models.ForeignKey(blank=True, help_text='nSVs*nY*nX binary array giving normalized eigenframesSVD-compression eigenframes', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='svd_movie_u', to='data.Dataset'),
        ),
        migrations.AlterField(
            model_name='svdcompressedmovie',
            name='compressed_data_V',
            field=models.ForeignKey(blank=True, help_text='nSamples*nSVs binary array SVD-compression timecourses', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='svd_movie_v', to='data.TimeSeries'),
        ),
        migrations.AlterField(
            model_name='svdcompressedmovie',
            name='session',
            field=models.ForeignKey(blank=True, help_text='The Session to which this data belongs', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='imaging_svdcompressedmovie_session_related', to='actions.Session'),
        ),
        migrations.AlterField(
            model_name='twophotonimaging',
            name='compressed_data',
            field=models.ForeignKey(blank=True, help_text='to Compressed_movie, if compression was run', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='two_photon_compressed', to='imaging.SVDCompressedMovie'),
        ),
        migrations.AlterField(
            model_name='twophotonimaging',
            name='raw_data',
            field=models.ForeignKey(blank=True, help_text='array of size nT by nX by nY by nZ by nC', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='two_photon_raw', to='data.TimeSeries'),
        ),
        migrations.AlterField(
            model_name='twophotonimaging',
            name='session',
            field=models.ForeignKey(blank=True, help_text='The Session to which this data belongs', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='imaging_twophotonimaging_session_related', to='actions.Session'),
        ),
        migrations.AlterField(
            model_name='widefieldimaging',
            name='raw_data',
            field=models.ForeignKey(blank=True, help_text='pointer to nT by nX by nY by nC (colors) binary file', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='widefield_raw', to='data.TimeSeries'),
        ),
        migrations.AlterField(
            model_name='widefieldimaging',
            name='session',
            field=models.ForeignKey(blank=True, help_text='The Session to which this data belongs', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='imaging_widefieldimaging_session_related', to='actions.Session'),
        ),



        migrations.RemoveField(
            model_name='roidetection',
            name='generating_software',
        ),
        migrations.RemoveField(
            model_name='roidetection',
            name='provenance_directory',
        ),
        migrations.RemoveField(
            model_name='twophotonimaging',
            name='end_time',
        ),
        migrations.RemoveField(
            model_name='twophotonimaging',
            name='imaging_indicator',
        ),
        migrations.RemoveField(
            model_name='twophotonimaging',
            name='start_time',
        ),
        migrations.RemoveField(
            model_name='widefieldimaging',
            name='end_time',
        ),
        migrations.RemoveField(
            model_name='widefieldimaging',
            name='start_time',
        ),




    ]
