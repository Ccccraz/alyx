# Generated by Django 2.0.6 on 2018-07-09 16:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('data', '0002_auto_20180709_1644'),
        ('electrophysiology', '0002_auto_20180709_1644'),
        ('equipment', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('actions', '0002_auto_20180709_1644'),
        ('misc', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='intracellularrecording',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='The creator of the data.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='electrophysiology_intracellularrecording_created_by_related', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='intracellularrecording',
            name='current_command',
            field=models.ForeignKey(blank=True, help_text='nA', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='intracellular_recording_current_command', to='data.Dataset'),
        ),
        migrations.AddField(
            model_name='intracellularrecording',
            name='pipette_puller',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='equipment.PipettePuller'),
        ),
        migrations.AddField(
            model_name='intracellularrecording',
            name='provenance_directory',
            field=models.ForeignKey(blank=True, help_text='link to directory containing intermediate results', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='electrophysiology_intracellularrecording_provenance_related', to='data.Dataset'),
        ),
        migrations.AddField(
            model_name='intracellularrecording',
            name='recorded_current',
            field=models.ForeignKey(blank=True, help_text='nA. TODO: time series? flat file? sample rate?', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='intracellular_recording_recorded_current', to='data.Dataset'),
        ),
        migrations.AddField(
            model_name='intracellularrecording',
            name='recorded_voltage',
            field=models.ForeignKey(blank=True, help_text='mV', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='intracellular_recording_recorded_voltage', to='data.Dataset'),
        ),
        migrations.AddField(
            model_name='intracellularrecording',
            name='session',
            field=models.ForeignKey(blank=True, help_text='The Session to which this data belongs', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='electrophysiology_intracellularrecording_session_related', to='actions.Session'),
        ),
        migrations.AddField(
            model_name='intracellularrecording',
            name='tip_location',
            field=models.ForeignKey(blank=True, help_text='Estimated location of probe tip', null=True, on_delete=django.db.models.deletion.SET_NULL, to='misc.BrainLocation'),
        ),
        migrations.AddField(
            model_name='intracellularrecording',
            name='voltage_command',
            field=models.ForeignKey(blank=True, help_text='mV', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='intracellular_recording_voltage_command', to='data.Dataset'),
        ),
        migrations.AddField(
            model_name='extracellularrecording',
            name='amplifier',
            field=models.ForeignKey(blank=True, help_text='The amplifier used in this recording.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='equipment.Amplifier'),
        ),
        migrations.AddField(
            model_name='extracellularrecording',
            name='daq_description',
            field=models.ForeignKey(blank=True, help_text='The DAQ used.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='equipment.DAQ'),
        ),
        migrations.AddField(
            model_name='extracellularrecording',
            name='gains',
            field=models.ForeignKey(blank=True, help_text='dataset containing gain of each channel  microvolts/bit', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='extracellular_gains', to='data.Dataset'),
        ),
        migrations.AddField(
            model_name='extracellularrecording',
            name='impedances',
            field=models.ForeignKey(blank=True, help_text='dataset containing measured impedance of each channel (ohms).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='extracellular_impedances', to='data.Dataset'),
        ),
        migrations.AddField(
            model_name='extracellularrecording',
            name='lfp',
            field=models.ForeignKey(blank=True, help_text='lfp: low-pass filtered and downsampled', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='extracellular_recording_lfp', to='data.Dataset'),
        ),
        migrations.AddField(
            model_name='spikesortedunit',
            name='spike_sorting',
            field=models.ForeignKey(blank=True, help_text='The spike sorting this unit came from', null=True, on_delete=django.db.models.deletion.SET_NULL, to='electrophysiology.SpikeSorting'),
        ),
        migrations.AddField(
            model_name='recordingsite',
            name='probe_insertion',
            field=models.ForeignKey(help_text='id of probe insertion', on_delete=django.db.models.deletion.CASCADE, to='electrophysiology.ProbeInsertion'),
        ),
    ]
