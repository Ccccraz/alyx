# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-05-13 13:45
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('electrophysiology', '0002_auto_20160509_1757'),
    ]

    operations = [
        migrations.AlterField(
            model_name='extracellularrecording',
            name='amplifier',
            field=models.ForeignKey(blank=True, help_text='The amplifier used in this recording.', null=True, on_delete=django.db.models.deletion.CASCADE, to='equipment.Amplifier'),
        ),
        migrations.AlterField(
            model_name='extracellularrecording',
            name='daq_description',
            field=models.ForeignKey(blank=True, help_text='The DAQ used.', null=True, on_delete=django.db.models.deletion.CASCADE, to='equipment.DAQ'),
        ),
        migrations.AlterField(
            model_name='extracellularrecording',
            name='electrode_depth',
            field=models.FloatField(blank=True, help_text='estimated depth of electrode tip from brain surface. ', null=True),
        ),
        migrations.AlterField(
            model_name='extracellularrecording',
            name='end_time',
            field=models.FloatField(blank=True, help_text='in seconds relative to experiment start', null=True),
        ),
        migrations.AlterField(
            model_name='extracellularrecording',
            name='extracellular_probe',
            field=models.ForeignKey(blank=True, help_text='Which probe model was used.', null=True, on_delete=django.db.models.deletion.CASCADE, to='equipment.ExtracellularProbe'),
        ),
        migrations.AlterField(
            model_name='extracellularrecording',
            name='start_time',
            field=models.FloatField(blank=True, help_text='in seconds relative to experiment start.', null=True),
        ),
        migrations.AlterField(
            model_name='intracellularrecording',
            name='electrode_solution',
            field=models.TextField(blank=True, help_text='Solution details.', null=True),
        ),
        migrations.AlterField(
            model_name='spikesortedunit',
            name='estimated_layer',
            field=models.CharField(blank=True, help_text='e.g. “Layer 5b”. ', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='spikesortedunit',
            name='half_width',
            field=models.FloatField(blank=True, help_text='ms, half width of negative peak in unfiltered spike waveform.', null=True),
        ),
        migrations.AlterField(
            model_name='spikesortedunit',
            name='isolation_distance',
            field=models.FloatField(blank=True, help_text='A measure of isolation quality', null=True),
        ),
        migrations.AlterField(
            model_name='spikesortedunit',
            name='l_ratio',
            field=models.FloatField(blank=True, help_text='A measure of isolation quality', null=True),
        ),
        migrations.AlterField(
            model_name='spikesortedunit',
            name='putative_cell_type',
            field=models.CharField(blank=True, help_text='e.g. “Sst interneuron”, “PT cell”. ', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='spikesortedunit',
            name='refractory_violation_rate',
            field=models.FloatField(blank=True, help_text='fraction of spikes occurring < 2ms. ', null=True),
        ),
        migrations.AlterField(
            model_name='spikesortedunit',
            name='trough_to_peak_amplitude',
            field=models.FloatField(blank=True, help_text='µV, from filtered spike waveform.', null=True),
        ),
        migrations.AlterField(
            model_name='spikesortedunit',
            name='trough_to_peak_width',
            field=models.FloatField(blank=True, help_text='ms, computed from unfiltered mean spike waveform.', null=True),
        ),
        migrations.AlterField(
            model_name='spikesorting',
            name='spike_times',
            field=models.ForeignKey(blank=True, help_text='time of each spike relative to experiment start in seconds.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='spike_sorting_spike_times', to='data.Dataset'),
        ),
    ]
